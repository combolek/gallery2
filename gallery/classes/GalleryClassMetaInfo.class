<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2002 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */


/**
 * Meta description of other Gallery Classes
 *
 * This class can describe the members contained in any other Gallery class.
 * This is necessary for the GalleryStorage class which needs to be able to
 * look inside a Gallery class to understand how to make it persistent.
 *
 * @version $Id$
 * @package GalleryCore
 * @author Bharat Mediratta <bharat@menalto.com>
 */
class GalleryClassMetaInfo {

    /**
     * Private container for holding class information
     *
     * @var array $_classInfo
     */
    var $_classInfo;

    /**
     * A list of every class that has meta info
     *
     * @var array $_classList
     */
    var $_classList;

    /**
     * Constructor
     *
     * Create a map of classes, members and member types
     */
    function GalleryClassMetaInfo() {
	/* Initialize our meta info tables */
	$this->_classInfo = array();
    }

    /**
     * Describe all the members of a class
     * @return array member => type associative array
     */
    function describeClass($className) {
	$this->_loadClassList();

	if (empty($this->_classInfo[$className])) {
	    $nucleus = new $className;
	    $this->_classInfo[$className] = $nucleus->getMetaInfo();
	}

	return $this->_classInfo[$className];
    }

    /**
     * List all the available classes
     *
     * @return array a list of class names
     */
    function listClasses() {
	$this->_loadClassList();
	return array_keys($this->_classList);
    }

    function _loadClassList() {
	if (empty($this->_classList)) {
	    $this->_classList = array();
	    foreach (get_declared_classes() as $className) {
		if (in_array("getmetainfo", get_class_methods($className))) {
		    $this->_classList[$className] = 1;
		}
	    }
	}
    }
}
