<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2002 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * A subclass of GalleryItem for containing groups of GalleryItems
 *
 * A GalleryItem that has certain extra properties relating to
 * displaying item groups and is allowed to contain other
 * GalleryItems.
 *
 * @version $Id$
 * @package GalleryCore
 * @author Bharat Mediratta <bharat@menalto.com>
 */
class AlbumItem extends GalleryItem {
    /*
     * ****************************************
     *                 Members
     * ****************************************
     */

    /**
     * Properties of this GalleryItem
     *
     * Valid properties are:
     * - bgcolor		(string) primary background color
     * - bgcolor2		(string) secondary background color
     * - textcolor		(string) text color
     * - linkcolor		(string) link color
     * - font		(string) font name
     * - border		(string) amount of table border
     * - bordercolor	(string) color of border
     * - showBreadcrumb	(string) whether or not to show the breadcrumb links
     * - thumbSize		(string) target size of the thumbnail
     * - resizeSize		(string) target size of the intermediate image
     * - rows		(int)    number of rows to show
     * - cols		(int)    number of columns to show
     * - useFullOnly	(bool)   allow the user to choose to show unresized only?
     * - printService	(bool)   allow printing?
     * - viewExtendedData	(bool)   allow user to view extended data?
     * - layout		(string) the layout to use for this album
     * - htmlHeader		(string) the html_header to use for this album
     * - htmlFooter		(string) the html_footer to use for this album
     * - displayViewCount	(bool)   show view counts for my items?
     */
	
    /*
     * ****************************************
     *                 Methods
     * ****************************************
     */
	
    /**
     * Constructor
     *
     * Create a new blank instance, and register any members that need to
     * persist in our storage.
     *
     * @access public
     */
    function AlbumItem() {
	$this->GalleryItem();
    }

    /**
     * Create a new instance of this GalleryNucleus in the persistent store
     *
     * @return int a status code
     */
    function create($albumName) {
	if (empty($albumName)) {
	    return ERROR | ERROR_BAD_PARAMETER;
	}
	
	global $gallery;
	$platform = $gallery->getPlatform();

	/* Create a new directory for this album in the temporary area */
	$tempDir = $gallery->getConfigValue('core.directory.temp');
	$albumDir = $tempDir . '/' . $albumName;
	print $albumDir;
	if (!$platform->mkdir($albumDir,
			      $gallery->getConfigValue('core.permissions.directory'))) {
	    return ERROR | ERROR_NAME_COLLISION;
	}

	/* Create a new instance of this nucleus in the persistent store */
	$storage =& $gallery->getStorage();
	$ret = $storage->newNucleus($this);
	if ($ret == SUCCESS) {
	    $gallery->addToCache($this);
	} else {

	    /* Clean up the directory */
	    fs_unlink($albumDir);
	}
	return $ret;
    }

    /**
     * Can this item contain other items?
     *
     * AlbumItems are allowed to contain other GalleryItems
     *
     * @access public
     * @return boolean true if the item can contain children
     */
    function canHaveChildren() {
	return true;
    }

    /**
     * Change the path component of this item of this item
     *
     * Overload GalleryNucleus' setPath so that when we change the path of an
     * AlbumItem we also rename the underlying directory.
     *
     * @access public
     * @param string the path component
     * @return boolean false if the path already exists, true otherwise
     */
    function setPath($newname) {
    }

    /**
     * Specify this AlbumItem sort style
     *
     * Specify that this AlbumItem's contents always be sorted by the property
     * and style provided.
     *
     * @access public
     * @param string the name of a sort property.  Can be any standard
     *               PROPERTY_* except PROPERTY_VIEWCOUNT.
     * @param string SORT_ASCENDING or SORT_DESCENDING
     */
    function setSort($property, $style) {
    }

    /**
     * Turn off sorting for this AlbumItem
     *
     * The order of the items remains the same, but any further changes will
     * not force a re-sort.
     *
     * @access public
     */
    function removeSort() {
    }

    /**
     * Set this as a root album
     *
     * Attempt to take over maintaining the top of the album tree.  Check the
     * top album to see if it's got an item id associated with it.  If not,
     * then associate this AlbumItem's id with it and we become the root.
     *
     * @access public
     * @return int a status code
     */
    function becomeTheRootAlbum() {
    }
}
?>