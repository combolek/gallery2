<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2002 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * Database schema management class
 *
 * This class is used to manage the database schema used by Gallery
 *
 * @version $Id$
 * @package GalleryStorage
 * @author Bharat Mediratta <bharat@menalto.com>
 */
class DatabaseSchema {

    /**
     * The database connection
     *
     * @var object ADOdb database connection
     */
    var $_db;

    /**
     * The database specific schema implementation
     *
     * @var object DatabaseSchema database connection
     */
    var $_implementation;

    /**
     * Constructor
     *
     * @param object ADOdb database connection
     */
    function DatabaseSchema($databaseConnection, $databaseType) {
	$this->_db = $databaseConnection;

	/* Load the right DatabaseSchema instance */
	$className = ucfirst(strtolower($databaseType)) . 'DatabaseSchema';
	require_once(dirname(__FILE__) .
		     '/DatabaseSchema/' .
		     $className .
		     '.class');
	$this->_implementation = new $className($databaseConnection);
    }

    /**
     * Create the database.
     *
     * Note that the database connection must not be attached to a specific
     * database for this to work.
     *
     * @param string the name of the database
     * @return int a status code
     */
    function createDatabase($databaseName) {
	return $this->_implementation->createDatabase($databaseName);
    }

    /**
     * Drop a database.
     *
     * Use this very carefully!
     *
     * Note that the database connection must not be attached to a specific
     * database for this to work.
     *
     * @param string the name of the database
     * @return int a status code
     */
    function dropDatabase($databaseName) {
	return $this->_implementation->dropDatabase($databaseName);
    }

    /**
     * Create a new schema.
     *
     * @param string the name of the database to create
     * @return int a status code
     */
    function createSchema() {
	return $this->_implementation->createSchema();
    }

    /**
     * Update the schema to the current version
     */
    function updateSchema() {
	return $this->_implementation->updateSchema();
    }
}
?>
