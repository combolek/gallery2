#!/bin/sh
DIST=dist 

# $Id$

case $1 in
	html)
		echo "Generating HTML Manual...";
		
		if [ ! -d $DIST/html ]; then
			mkdir -p $DIST/html;
		fi

		cd $DIST/html
		xsltproc ../../docbook-xsl/html/chunk.xsl ../../manual.xml
		cp -R ../../images .
		rm -rf images/CVS
		;;

	bightml)
		echo "Generating Big HTML Manual...";

		if [ ! -d $DIST/bightml ]; then
			mkdir -p $DIST/bightml;
		fi

		xsltproc docbook-xsl/html/docbook.xsl manual.xml > $DIST/bightml/index.html
		cp -R images $DIST/bightml
		rm -rf $DIST/bightml/CVS
		;;
		
	pdf)
		echo "Generating PDF Manual...";

		if [ ! -d $DIST/pdf ]; then
			mkdir -p $DIST/pdf;
		fi

		if [ -e $DIST/pdf/manual.pdf ]; then
			rm -f $DIST/pdf/manual.pdf;
		fi

		fop -q -xsl docbook-xsl/fo/docbook.xsl -xml manual.xml -pdf $DIST/pdf/manual.pdf

		rm -f manual.fo
		;;
		
	test-saxon) 
		echo "Testing documentation (if you see no errors, everything is good)..."

		java -classpath ./docbook-xsl/extensions/saxon651.jar sax.SAXCount manual.xml
		;;
		
	test-xmllint)
		echo "Testing documentation (if you see no errors, everything is good)..."

		xmllint --valid --noout manual.xml
		;;		
	
	help)
		echo "Gallery Documentation Generation Script";
		echo "---------------------------------------";
		echo "Usage: ./gen [option]";
		echo "";		
		echo "Options:";
		echo "html          Generate HTML documents";
		echo "bightml       Generate one big HTML document";
		echo "pdf           Generate a PDF (requires fop)";
		echo "dist          Generate all types";
		echo "test-saxon    Test for XML errors using saxon";
		echo "test-xmllint  Test for XML errors using xmllint";
		echo "clean         Remove all generated manuals (created by html, bightml, etc..)";
		echo "help          Display this help page"
		;;

	dist)
		$0 html
		$0 bightml
		$0 pdf
		;;

	clean)
		echo "Deleting generated documentation...";
                
                #Remove files
		rm -rf $DIST
		;;

	*)
		echo "Invalid Action.  Type './gen help' for help";;
esac

